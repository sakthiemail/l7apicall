<?php
//app/Helpers/APIHelper/ZohoCRM/RestClient.php
namespace App\Helpers\APIHelper\ZohoCRM;

use zcrmsdk\crm\exception\ZCRMException;
use Carbon\Carbon;

use App\Models\ZCRM\ZCRMOAuthTokens;

class RestAPIs
{
    private $access_code;
    private $client_id;
    private $client_secret;
    private $redirect_url;
    private $user_email;
        
    /**
    *  Initilize variables from ENV
    */ 
   public  function __construct()
    {
        $this->access_code = env('ZCRM_CODE');
        $this->client_id =  env('ZCRM_CLIENT_ID');
        $this->client_secret = env('ZCRM_SECRET');
        $this->redirect_url = env('ZCRM_REDIRECT_URL');
        $this->user_email = env('ZCRM_USER_EMAIL');     
    }

    /**
     * Do Curl Call API
     * @url string
     * @headers array
     * @post_data array
     * @method string
     * @return array or boolean
     */
    public function ZCRMCurlCall($url, $headers, $method)
    {  
        $curl = curl_init();
        curl_setopt_array($curl, array(
            CURLOPT_URL => $url,
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 0,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => $method,
            CURLOPT_HTTPHEADER => $headers,
        ));

        $response = curl_exec($curl);
        $err = curl_error($curl);
        curl_close($curl);
        if ($err) {
            echo "<br/>cURL Error #:" . $err;
            return false;
        } else {
            return json_decode($response,true); 
        }
    }

    /**
     * Get and Store grant tokens.
     *
     * @return boolean
     */
    public function getGrantTokens()
    {    
        $url = "https://accounts.zoho.in/oauth/v2/token?code=" . $this->access_code ."&redirect_uri=". $this->redirect_url . "&client_id=" . $this->client_id . "&client_secret=" .  $this->client_secret . "&grant_type=authorization_code";
       
        $headers = array(
            // Set here requred headers
            "accept: */*",
            "accept-language: en-US,en;q=0.8",
            "content-type: application/json",
        );

        $method = 'POST';

        $tokens = $this->ZCRMCurlCall($url, $headers, $method);
        if (isset($tokens['access_token'])) {              
            $this->updateAccessToken($tokens);           
            return true; 
        }
        /*else{
            echo "<br/>Failed: Access token is not generated. Please Check.";
            return false;
        }*/           
    }


    /**
     * Get and Store refreshed tokens.
     *
     * @return boolean
     */
    public function getRefreshedAccessTokens($refreshToken)
    {
        $url = "https://accounts.zoho.in/oauth/v2/token?refresh_token=" .$refreshToken."&client_id=" . $this->client_id . "&client_secret=" .  $this->client_secret . "&grant_type=refresh_token";
        $method = 'POST';
        $headers = array(
            // Set here requred headers
            "accept: */*",
            "accept-language: en-US,en;q=0.8",
            "content-type: application/json",
        );
        $tokens = $this->ZCRMCurlCall($url, $headers, $method);        
        if (isset($tokens['access_token'])) {              
            $this->updateAccessToken($tokens);           
            return true; 
        }else{
            echo "<br/>Failed: Access token is not generated by refresh token. Please Check.";
            return false;
        }  
    }

    /**
     * Store ZHRM tokens.
     *
     * @return void
     */
    public function updateAccessToken($arrTokens)
    {
        $zcrmoauth = ZCRMOAuthTokens::where('useridentifier', $this->user_email)->first();
        if(!$zcrmoauth){
            $zcrmoauth = new ZCRMOAuthTokens();             
        }
        $zcrmoauth->useridentifier = $this->user_email;
        $zcrmoauth->accesstoken = $arrTokens['access_token']; 
        $zcrmoauth->refreshtoken = isset($arrTokens['refresh_token'])? $arrTokens['refresh_token']:$zcrmoauth->refreshtoken;     
        $zcrmoauth->expirytime = $arrTokens['expires_in'];   
        $zcrmoauth->expires_at = Carbon::now();   
        $zcrmoauth->save();       
    }
    
     /**
     * Get ZCRMAccounts from ZCRM.
     *
     * @return array
     */
    public function getZCRMAccounts(){        
        try {
            // generate Grant and Refresh Token
            $generated = $this->getGrantTokens();
            
            $zcrmoauth =  new ZCRMOAuthTokens;
            $zcrmoauth = ZCRMOAuthTokens::where('useridentifier',$this->user_email)->first();
            if($zcrmoauth){
                if ($zcrmoauth->tokenExpired()) {
                    $generated = $this->getRefreshedAccessTokens($zcrmoauth->refreshtoken);
                    $zcrmoauth = ZCRMOAuthTokens::where('useridentifier',$this->user_email)->first();
                }
            }else{
                echo "RestAPI: Tokens are not found\n";
                return false;
            }
            $url = "https://www.zohoapis.in/crm/v2/Accounts";
            $headers = array(
                // Set here requred headers
                "Authorization: Zoho-oauthtoken ".$zcrmoauth->accesstoken,
                "content-type: application/json",
            );

            $method = 'GET';
            $arr_records = $this->ZCRMCurlCall($url, $headers, $method);              
            return $arr_records;

        } catch( ZCRMException $e){
            echo $e->getCode();
            echo $e->getMessage();
            echo $e->getExceptionCode();
        }
    }

}